@model ClothBazar.Web.ViewModel.HomeViewModel
@{
    ViewBag.Title = "ProductTable";
}

<!--search functionality form-->
<div class="my-4">
    <form method="post">
        <div class="row">
            <div class="col-md-7">
                <div class="form-group">
                    <input id="searchTxt" name="Search" class="form-control" />
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <button type="button" id="searchBtn"> Search </button>
                    <button type="button" id="newBtn"> New </button>
                    <button type="button" id="resetBtn"> Reset </button>
                </div>
             </div>
        </div>
    </form>
</div>

<!--showing all products in table-->
<div class="title-section">
    <h2 class="title">
        Products
    </h2>
</div>
<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <td> Name </td>
                <td> Price </td>
                <td> Category </td>
                <td> Actions </td>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products != null && Model.Products.Count > 0)
            {
                foreach (var item in Model.Products)
                {
                    <tr>
                        <td> @item.Name </td>
                        <td> @item.Price </td>
                        <td>
                            @if (item.Category != null)
                            {
                                <text> @item.Category.Name </text>
                            }
                            else
                            {
                                <text> --- </text>
                            }

                        </td>
                        <td>
                            <button type="button" class="editBtn" data-id="@item.ID">Edit</button>
                            <button type="button" class="deleteBtn" data-id="@item.ID">Delete</button>
                            <button type="button" class="btnAddToCart" data-id="@item.ID">Add To Cart</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td  colspan="4" class="text-center">No Products Found</td>
                </tr>
            }

        </tbody>
    </table>
    <div>
        @if (Model.PageNo != 1) { 
        <button class="btnPagination" data-PageNo="@(Model.PageNo-1)"> Previous </button>
        }
        <button class="btnPagination" data-PageNo="@(Model.PageNo+1)"> Next </button>
    </div>

</div>

<div>
    <script>
        $(".btnPagination").click(function () { // select element by id
            
            $.ajax({ // start ajax function
                url: '/Product/ProductTable', // path for which action method wants to call
                data: {
                    pageNo: $(this).attr("data-PageNo") // put any data from current view
                }
            })
                .done(function (response) { // if task is completed then this piece of code runs
                    $("#tableCont").html(response);
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) { // if task is failed then this piece of code runs
                    alert("Fail");
                });
        });

        $("#searchBtn").click(function () { // select element by id
            var searchVal = $("#searchTxt").val();

            $.ajax({ // start ajax function
                url: '/Product/ProductTable', // path for which action method wants to call
                data: {
                    search: searchVal  // put any data from current view
                }
            })
                .done(function (response) { // if task is completed then this piece of code runs
                    $("#tableCont").html(response);
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) { // if task is failed then this piece of code runs
                    alert("Fail");
                });
        });

        $("#resetBtn").click(function () { // select element by id
            var searchVal = "";

            $.ajax({ // start ajax function
                url: '/Product/ProductTable', // path for which action method wants to call
                data: {
                    search: searchVal  // put any data from current view
                }
            })
                .done(function (response) { // if task is completed then this piece of code runs
                    $("#tableCont").html(response);
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) { // if task is failed then this piece of code runs
                    alert("Fail");
                });
        });

        $("#newBtn").click(function () {

            $.ajax({
                url: '/Product/Create',
            })
                .done(function (response) {
                    console.log(response);
                    $("#actionCont").html(response);
                    focusAction("actionCont");
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Fail");
                });
        });

        $(".editBtn").click(function () {
             //debugger;
            $.ajax({
                url: '/Product/Edit',
                data: {
                    ID: $(this).attr('data-id')
                }
            })
                .done(function (response) {
                    $("#actionCont").html(response);
                    focusAction("actionCont");
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Fail");
                });
        });

        $(".deleteBtn").click(function () {
            swal({
                title: "Confirm?",
                text: "Are you sure want to delete this product.",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        $.ajax({
                    type: 'POST',
                    url: '/Product/Delete',
                    data: {
                        ID: $(this).attr('data-id') // define custom attribute for using unique value in foreach loop
                    }
                })
                    .done(function (response) {
                        $("#tableCont").html(response);
                        swal("Record has been Deleted.", {
                            icon: "success",
                        });
                    })
                    .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("Fail");
                    });

                        
                    } 
                });
        });

        var products = [];

        $(".btnAddToCart").click(function () {
            var productID = $(this).attr("data-id");
            products.push(productID);
            $.cookie("CartProducts", products.join('-'), { path:"/" });
            alert("Product Added To Cart.");

        });

    </script>
</div>